#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.2 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 72 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 1
#"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
          0 2660 0 17 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 24 29 1 #"\n"
0 0 17 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 24 29 1 #"\n"
0 0 26 3 7 #"#reader"
0 0 24 3 1 #"("
0 0 14 3 3 #"lib"
0 0 24 3 1 #" "
0 0 19 3 25 #"\"htdp-advanced-reader.ss\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"lang\""
0 0 24 3 3 #")(("
0 0 14 3 7 #"modname"
0 0 24 3 1 #" "
0 0 14 3 50 #"|Laboratorio5Pronto(Bruno_Correa_Rodolfo_Barbosa)|"
0 0 24 3 3 #") ("
0 0 14 3 19 #"read-case-sensitive"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 3 #") ("
0 0 14 3 10 #"teachpacks"
0 0 24 3 3 #" (("
0 0 14 3 3 #"lib"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"image.rkt\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"teachpack\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"2htdp\""
0 0 24 3 3 #") ("
0 0 14 3 3 #"lib"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"universe.rkt\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"teachpack\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"2htdp\""
0 0 24 3 5 #"))) ("
0 0 14 3 13 #"htdp-settings"
0 0 24 3 3 #" #("
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 14 3 11 #"constructor"
0 0 24 3 1 #" "
0 0 14 3 17 #"repeating-decimal"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 14 3 4 #"none"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 3 #" (("
0 0 14 3 3 #"lib"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"image.rkt\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"teachpack\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"2htdp\""
0 0 24 3 3 #") ("
0 0 14 3 3 #"lib"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"universe.rkt\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"teachpack\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"2htdp\""
0 0 24 3 3 #")) "
0 0 21 3 2 #"#f"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; Uma Cena (Scene) pode ser"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; 1. vazia (empty-scene larg alt), onde"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; larg : N\303\272mero"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; alt : N\303\272mero"
0 0 24 29 1 #"\n"
0 0 17 3 5 #";; ou"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; 2. (place-image img x y cena) , onde"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; img : Imagem"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; x : N\303\272mero"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; y : N\303\272mero"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";; cena: Cena"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; ListaDeCenas \303\251:"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; 1. empty"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; 2. (cons c ldc) onde:"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; c: Cena"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; ldc: ListaDeCenas"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 3 #"pos"
0 0 24 3 2 #" ("
0 0 14 3 2 #"px"
0 0 24 3 1 #" "
0 0 14 3 2 #"py"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";;Um elemento do conjunto pos \303\251:"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; (make-pos (px py)), onde:"
0 0 24 29 1 #"\n"
0 0 17 3 51
(
 #";; - px : N\303\272mero, posi\303\247"
 #"\303\243o em rela\303\247\303\243o ao eixo X"
) 0 0 24 29 1 #"\n"
0 0 17 3 50
(
 #";; - py: N\303\272mero, posi\303\247\303"
 #"\243o em real\303\247\303\243o ao eixo Y"
) 0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Exemplos:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"pos_canh\303\243o"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-pos"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"inicial_bolhas"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-pos"
0 0 24 3 1 #"("
0 0 14 3 6 #"pos-px"
0 0 24 3 1 #" "
0 0 14 3 11 #"pos_canh\303\243o"
0 0 24 3 3 #") ("
0 0 14 3 6 #"pos-py"
0 0 24 3 1 #" "
0 0 14 3 11 #"pos_canh\303\243o"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 3 #"vel"
0 0 24 3 2 #" ("
0 0 14 3 2 #"vx"
0 0 24 3 1 #" "
0 0 14 3 2 #"vy"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";;Um elemento do conjunto vel \303\251:"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; (make-pos (vx vy)), onde:"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; - vx: N\303\272mero, velocidade da bolha no eixo X"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; - vy; N\303\272mero, velocidade da bolha no eixo Y"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Exemplo:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"vel_bolha1"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-vel"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 21 3 3 #"7.5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"vel_bolha2"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-vel"
0 0 24 3 1 #" "
0 0 21 3 3 #"2.5"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"vel_bolha3"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-vel"
0 0 24 3 1 #" "
0 0 21 3 4 #"-0.5"
0 0 24 3 1 #" "
0 0 21 3 4 #"-4.5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"vel_bolha4"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-vel"
0 0 24 3 1 #" "
0 0 21 3 3 #"3.5"
0 0 24 3 1 #" "
0 0 21 3 3 #"0.5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"vel_bolha5"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-vel"
0 0 24 3 1 #" "
0 0 21 3 4 #"-3.5"
0 0 24 3 1 #" "
0 0 21 3 2 #"-3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"vel_bolha6"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-vel"
0 0 24 3 1 #" "
0 0 21 3 3 #"2.5"
0 0 24 3 1 #" "
0 0 21 3 4 #"-7.5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"vel_bolha7"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-vel"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 3 #"7.5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"vel_bolha8"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-vel"
0 0 24 3 1 #" "
0 0 21 3 4 #"-2.5"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"vel_bolha9"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-vel"
0 0 24 3 1 #" "
0 0 21 3 3 #"2.5"
0 0 24 3 1 #" "
0 0 21 3 3 #"7.5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"Bolha"
0 0 24 3 2 #" ("
0 0 14 3 3 #"pos"
0 0 24 3 1 #" "
0 0 14 3 3 #"vel"
0 0 24 3 1 #" "
0 0 14 3 11 #"resistencia"
0 0 24 3 1 #" "
0 0 14 3 4 #"raio"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;Um elemento do conjunto Bolha \303\251:"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; (make-Bolha (pos vel resistencia raio)), onde:"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; - pos: pos, posi\303\247\303\243o em x e y da bolha"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; - vel: vel, velocidades iniciais em x e y da bolha"
0 0 24 29 1 #"\n"
0 0 17 3 125
(
 #";; - resistencia: N\303\272mero, resist\303\252ncia da bolha(se resi"
 #"st\303\252ncia <= 5, n\303\243o resistente... se resistencia > 5 <=1"
 #"0 resistente)"
) 0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Exemplo:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"Bolha1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-Bolha"
0 0 24 3 1 #" "
0 0 14 3 14 #"inicial_bolhas"
0 0 24 3 1 #" "
0 0 14 3 10 #"vel_bolha1"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"Bolha2"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-Bolha"
0 0 24 3 1 #" "
0 0 14 3 14 #"inicial_bolhas"
0 0 24 3 1 #" "
0 0 14 3 10 #"vel_bolha2"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"Bolha3"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-Bolha"
0 0 24 3 1 #" "
0 0 14 3 14 #"inicial_bolhas"
0 0 24 3 1 #" "
0 0 14 3 10 #"vel_bolha3"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"Bolha4"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-Bolha"
0 0 24 3 1 #" "
0 0 14 3 14 #"inicial_bolhas"
0 0 24 3 1 #" "
0 0 14 3 10 #"vel_bolha4"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"Bolha5"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-Bolha"
0 0 24 3 1 #" "
0 0 14 3 14 #"inicial_bolhas"
0 0 24 3 1 #" "
0 0 14 3 10 #"vel_bolha5"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"Bolha6"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-Bolha"
0 0 24 3 1 #" "
0 0 14 3 14 #"inicial_bolhas"
0 0 24 3 1 #" "
0 0 14 3 10 #"vel_bolha6"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"Bolha7"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-Bolha"
0 0 24 3 1 #" "
0 0 14 3 14 #"inicial_bolhas"
0 0 24 3 1 #" "
0 0 14 3 10 #"vel_bolha7"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"Bolha8"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-Bolha"
0 0 24 3 1 #" "
0 0 14 3 14 #"inicial_bolhas"
0 0 24 3 1 #" "
0 0 14 3 10 #"vel_bolha8"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"Bolha9"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-Bolha"
0 0 24 3 1 #" "
0 0 14 3 14 #"inicial_bolhas"
0 0 24 3 1 #" "
0 0 14 3 10 #"vel_bolha9"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"BolhaFora"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-Bolha"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-pos"
0 0 24 3 1 #" "
0 0 21 3 4 #"1000"
0 0 24 3 1 #" "
0 0 21 3 4 #"1000"
0 0 24 3 2 #") "
0 0 14 3 10 #"vel_bolha9"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"BolhaParada"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-Bolha"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-pos"
0 0 24 3 1 #" "
0 0 21 3 4 #"1000"
0 0 24 3 1 #" "
0 0 21 3 4 #"1000"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-vel"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";;Um elemento do conjunto ListaDeBolhas \303\251:"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; - empty, ou"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; - (cons Bolha ldb), onde:"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";;    - ldb: ListaDeBolhas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"ListaDeBolhas1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"Bolha1"
0 0 24 3 1 #" "
0 0 14 3 6 #"Bolha2"
0 0 24 3 1 #" "
0 0 14 3 6 #"Bolha3"
0 0 24 3 1 #" "
0 0 14 3 6 #"Bolha4"
0 0 24 3 1 #" "
0 0 14 3 6 #"Bolha5"
0 0 24 3 1 #" "
0 0 14 3 6 #"Bolha6"
0 0 24 3 1 #" "
0 0 14 3 6 #"Bolha7"
0 0 24 3 1 #" "
0 0 14 3 6 #"Bolha8"
0 0 24 3 1 #" "
0 0 14 3 6 #"Bolha9"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"ListaDeBolhas2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"Bolha2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"ListaDeBolhasVazia"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Forma \303\251:"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; 1.(rectangle w h m c) onde:"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; w: (Numero) largura do retangulo"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; h: (Numero) altura do retangulo"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; m: (String) modo de pintura; outline ou solid"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; c: (String) cor do retangulo"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; 2.(circle r m c) onde:"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; r: (Numero) raio do circulo"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; m: (String) modo de pintura; outline ou solid"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; c: (String) cor do circulo"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; 3.(triangle l m c) onde:"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; l: (Numero) medida dos lados do triangulo"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; m: (String) modo de pintura; outline ou solid"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; c: (String) cor do triangulo"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"Objeto"
0 0 24 3 2 #" ("
0 0 14 3 5 #"forma"
0 0 24 3 1 #" "
0 0 14 3 7 #"posicao"
0 0 24 3 1 #" "
0 0 14 3 5 #"mole?"
0 0 24 3 1 #" "
0 0 14 3 9 #"distancia"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; Um Objeto \303\251:"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; (make-Objeto f p m d) onde:"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; f: (Forma) forma do objeto"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; p: (pos) posicao gr\303\241fica do Objeto"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; m: (Boolean) #true se n\303\243o for resistente, #false se for re"
 #"sistente"
) 0 0 24 29 1 #"\n"
0 0 17 3 129
(
 #";; d: (Numero) distancia suposta arredondada para baixo entre um dos"
 #" lados do objeto e seu centro, para tornar a colisao possivel"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Exemplo:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"Objeto1"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-Objeto"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-pos"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 3 #")  "
0 0 21 3 5 #"#true"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"Objeto2"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-Objeto"
0 0 24 3 2 #" ("
0 0 14 3 8 #"triangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-pos"
0 0 24 3 1 #" "
0 0 21 3 3 #"350"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"Objeto3"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-Objeto"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-pos"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"Objeto4"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-Objeto"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-pos"
0 0 24 3 1 #" "
0 0 21 3 3 #"600"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"Objeto5"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-Objeto"
0 0 24 3 2 #" ("
0 0 14 3 8 #"triangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-pos"
0 0 24 3 1 #" "
0 0 21 3 3 #"450"
0 0 24 3 1 #" "
0 0 21 3 3 #"389"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"Objeto6"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-Objeto"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-pos"
0 0 24 3 1 #" "
0 0 21 3 3 #"628"
0 0 24 3 1 #" "
0 0 21 3 3 #"419"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"Objeto7"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-Objeto"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-pos"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"Objeto8"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-Objeto"
0 0 24 3 2 #" ("
0 0 14 3 8 #"triangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-pos"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 3 #"180"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"Objeto9"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-Objeto"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-pos"
0 0 24 3 1 #" "
0 0 21 3 3 #"780"
0 0 24 3 1 #" "
0 0 21 3 3 #"350"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"Objeto10"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-Objeto"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-pos"
0 0 24 3 1 #" "
0 0 21 3 3 #"230"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"Objeto11"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-Objeto"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-pos"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"Objeto12"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-Objeto"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-pos"
0 0 24 3 1 #" "
0 0 21 3 3 #"560"
0 0 24 3 1 #" "
0 0 21 3 3 #"360"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"Objeto13"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-Objeto"
0 0 24 3 2 #" ("
0 0 14 3 8 #"triangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-pos"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"Objeto14"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-Objeto"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-pos"
0 0 24 3 1 #" "
0 0 21 3 2 #"80"
0 0 24 3 1 #" "
0 0 21 3 3 #"380"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"Objeto15"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-Objeto"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-pos"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"Objeto16"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-Objeto"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-pos"
0 0 24 3 1 #" "
0 0 21 3 3 #"409"
0 0 24 3 1 #" "
0 0 21 3 3 #"201"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;Uma ListaDeObjetos \303\251:"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; - empty, ou"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; - (cons Objeto ldo), onde:"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; - ldo: ListaDeObjetos"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Exemplos:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"ListaDeObjetos1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 7 #"Objeto1"
0 0 24 3 1 #" "
0 0 14 3 7 #"Objeto2"
0 0 24 3 1 #" "
0 0 14 3 7 #"Objeto3"
0 0 24 3 1 #" "
0 0 14 3 7 #"Objeto4"
0 0 24 3 1 #" "
0 0 14 3 7 #"Objeto5"
0 0 24 3 1 #" "
0 0 14 3 7 #"Objeto6"
0 0 24 3 1 #" "
0 0 14 3 7 #"Objeto7"
0 0 24 3 1 #" "
0 0 14 3 7 #"Objeto8"
0 0 24 3 1 #" "
0 0 14 3 7 #"Objeto9"
0 0 24 3 1 #" "
0 0 14 3 8 #"Objeto10"
0 0 24 3 1 #" "
0 0 14 3 8 #"Objeto11"
0 0 24 3 1 #" "
0 0 14 3 8 #"Objeto12"
0 0 24 3 1 #" "
0 0 14 3 8 #"Objeto13"
0 0 24 3 1 #" "
0 0 14 3 8 #"Objeto14"
0 0 24 3 1 #" "
0 0 14 3 8 #"Objeto15"
0 0 24 3 1 #" "
0 0 14 3 8 #"Objeto16"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"ListaDeObjetosVazia"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 4 #"Sala"
0 0 24 3 2 #" ("
0 0 14 3 11 #"comprimento"
0 0 24 3 1 #" "
0 0 14 3 6 #"altura"
0 0 24 3 1 #" "
0 0 14 3 15 #"objetos_na_sala"
0 0 24 3 1 #" "
0 0 14 3 6 #"canhao"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; Um elemento do conjunto Sala \303\251:"
0 0 24 29 1 #"\n"
0 0 17 3 65
(
 #";; (make-Sala (comprimneto altura canh\303\243o bolhas_na_sala)), on"
 #"de:"
) 0 0 24 29 1 #"\n"
0 0 17 3 46 #";; - comprimento: N\303\272mero, comprimento da sala"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; - altura: N\303\272mero, altura da sala"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; - objetos_na_sala: ListaDeObjetos, objetos presentes na sala"
0 0 24 29 1 #"\n"
0 0 17 3 52
#";; - canhao: pos, dita onde o canhao ser\303\241 desenhado"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Exemplos:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"Sala1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-Sala"
0 0 24 3 1 #" "
0 0 21 3 3 #"800"
0 0 24 3 1 #" "
0 0 21 3 3 #"600"
0 0 24 3 1 #" "
0 0 14 3 15 #"ListaDeObjetos1"
0 0 24 3 1 #" "
0 0 14 3 11 #"pos_canh\303\243o"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; iniciaBolhas: ListaDeBolhas Pos -> ListaDeBolhas"
0 0 24 29 1 #"\n"
0 0 17 3 207
(
 #";; Objetivo: Com base em uma "
 #"lista de bolhas e uma posi\303\247\303\243o do canh\303\243o, inicia"
 #"liza as posi\303\247\303\265es das bo"
 #"lhas para a posi\303\247\303\243o do canh\303\243o, para que possam "
 #"ser utilizadas devidademente em fun\303\247\303\265es posteriores"
) 0 0 24 29 1 #"\n"
0 0 17 3 44 #";; Exemplo: (iniciaBolhas (list BolhaFora) )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; CenaDaSala: Sala -> Cena"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; A partir de uma Sala, cria uma cena com a sala correspondente"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; Exemplo: (CenaDaSala Sala1) -> "
0 6           4 17 670
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:p"
 #"oint 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 80"
 #"0 0 0 0) #(struct:pulled-point 0 0 800 600 0 0) #(struct:pulled-poin"
 #"t 0 0 0 600 0 0)) outline #(struct:pen \"black\" 2 solid round round"
 #")))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 800 0 "
 #"0 0) #(struct:pulled-point 0 0 800 600 0 0) #(struct:pulled-point 0 "
 #"0 0 600 0 0)) 255 \"white\")))))) #(struct:bb 800 600 600) #f)"
) 0 0 24 29 1 #"\n"
0 0 17 3 8 #";;Teste:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"CenaDaSala"
0 0 24 3 1 #" "
0 0 14 3 5 #"Sala1"
0 0 24 3 2 #") "
0 6           4 21 670
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:p"
 #"oint 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 80"
 #"0 0 0 0) #(struct:pulled-point 0 0 800 600 0 0) #(struct:pulled-poin"
 #"t 0 0 0 600 0 0)) outline #(struct:pen \"black\" 2 solid round round"
 #")))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 800 0 "
 #"0 0) #(struct:pulled-point 0 0 800 600 0 0) #(struct:pulled-point 0 "
 #"0 0 600 0 0)) 255 \"white\")))))) #(struct:bb 800 600 600) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"CenaDaSala"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 2 #" ("
0 0 14 3 16 #"Sala-comprimento"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 3 #") ("
0 0 14 3 11 #"Sala-altura"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"CenaDaSala1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"CenaDaSala"
0 0 24 3 1 #" "
0 0 14 3 5 #"Sala1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; DesenhaObjetosDaSala: Lista-De-Objetos Cena -> Cena"
0 0 24 29 1 #"\n"
0 0 17 3 109
(
 #";; A partir de uma Lista de Objetos e a Cena de uma Sala, retorna a "
 #"cena da sala contendo os objetos da lista"
) 0 0 24 29 1 #"\n"
0 0 17 3 66
#";; Exemplo: (DesenhaObjetosDaSala ListaDeObjetos1 CenaDaSala1) -> "
0 6           4 17 6788
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:p"
 #"oint 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 170 230 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 60 0 0 0) #(struct:pulled-point 0 0 60 40 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 40 0 0)) outline \"red\"))) #(struct:translate 0 0 #(struct"
 #":crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 "
 #"600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 335.0 237.00961894323342 #(struct:translate -0.0 "
 #"25.98076211353316 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 "
 #"0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 15."
 #"000000000000007 -25.98076211353316 0 0)) 255 \"blue\"))) #(struct:tr"
 #"anslate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 800 0)"
 #" #(struct:point 800 600) #(struct:point 0 600)) #(struct:translate 0"
 #" -10 #(struct:overlay #(struct:translate 70 0 #(struct:translate 30 "
 #"30 #(struct:ellipse 60 60 0 255 \"blue\"))) #(struct:translate 0 10 "
 #"#(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:po"
 #"int 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 580 170 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 40 0 0 0) #(struct:pulled-point 0 0 40 60 0 0) #(struct:pulled-poin"
 #"t 0 0 0 60 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:cr"
 #"op (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 600"
 #") #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 440.0 380.33974596215563 #(struct:translate -0.0 17."
 #"320508075688775 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 10.00"
 #"0000000000004 -17.320508075688775 0 0)) 255 \"red\"))) #(struct:tran"
 #"slate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #"
 #"(struct:point 800 600) #(struct:point 0 600)) #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 1241/2 823/2 #(struct:translate"
 #" 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:p"
 #"ulled-point 0 0 15 0 0 0) #(struct:pulled-point 0 0 15 15 0 0) #(str"
 #"uct:pulled-point 0 0 0 15 0 0)) 255 \"green\"))) #(struct:translate "
 #"0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struc"
 #"t:point 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 10 5 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 40 0 0 0) #(struct:pulled-point 0 0 40 30 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 30 0 0)) 255 \"blue\"))) #(struct:translate 0 0 #(struct:cr"
 #"op (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 600"
 #") #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 10.0 171.3397459621556 #(struct:translate -0.0 17.32"
 #"0508075688775 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #"
 #"(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 10.0000"
 #"00000000004 -17.320508075688775 0 0)) outline \"black\"))) #(struct:"
 #"translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 800 "
 #"0) #(struct:point 800 600) #(struct:point 0 600)) #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 770 335 #(struct:translate "
 #"0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pu"
 #"lled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 20 30 0 0) #(stru"
 #"ct:pulled-point 0 0 0 30 0 0)) 255 \"black\"))) #(struct:translate 0"
 #" 0 #(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct"
 #":point 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 215 185 #(struct:translate 15 15 #(str"
 #"uct:ellipse 30 30 0 outline \"orange\"))) #(struct:translate 0 0 #(s"
 #"truct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point"
 #" 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 110 25 #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 "
 #"0 0 0) #(struct:pulled-point 0 0 20 30 0 0) #(struct:pulled-point 0 "
 #"0 0 30 0 0)) 255 \"yellow\"))) #(struct:translate 0 0 #(struct:crop "
 #"(#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) #"
 #"(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 520 320 #(struct:translate 40 40 #(struct:ellipse 80 80"
 #" 0 255 \"green\"))) #(struct:translate 0 0 #(struct:crop (#(struct:p"
 #"oint 0 0) #(struct:point 800 0) #(struct:point 800 600) #(struct:poi"
 #"nt 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 592.0 551.3397459621556 #(struct:translate -0.0 17.320508075688775"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 10.000000000000004 -"
 #"17.320508075688775 0 0)) outline \"green\"))) #(struct:translate 0 0"
 #" #(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:p"
 #"oint 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 70 365 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 20 0 0 0) #(struct:pulled-point 0 0 20 30 0 0) #(struct:pulled-poin"
 #"t 0 0 0 30 0 0)) outline \"red\"))) #(struct:translate 0 0 #(struct:"
 #"crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 6"
 #"00) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 90 25 #(struct:translate 0 0 #(struct:polygon (#(s"
 #"truct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) "
 #"#(struct:pulled-point 0 0 20 30 0 0) #(struct:pulled-point 0 0 0 30 "
 #"0 0)) 255 \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct"
 #":point 0 0) #(struct:point 800 0) #(struct:point 800 600) #(struct:p"
 #"oint 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 399 186 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled"
 #"-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pul"
 #"led-point 0 0 20 30 0 0) #(struct:pulled-point 0 0 0 30 0 0)) 255 \""
 #"blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) "
 #"#(struct:point 800 0) #(struct:point 800 600) #(struct:point 0 600))"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 800 0 0 0) #(struct:pulled-point 0 0 8"
 #"00 600 0 0) #(struct:pulled-point 0 0 0 600 0 0)) outline #(struct:p"
 #"en \"black\" 2 solid round round)))) #(struct:translate 0 0 #(struct"
 #":translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) "
 #"#(struct:pulled-point 0 0 800 0 0 0) #(struct:pulled-point 0 0 800 6"
 #"00 0 0) #(struct:pulled-point 0 0 0 600 0 0)) 255 \"white\")))))))))"
 #"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) #(stru"
 #"ct:bb 800 600 600.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 17 3 10 #";; Teste: "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 3 #"  ("
0 0 14 3 20 #"DesenhaObjetosDaSala"
0 0 24 3 1 #" "
0 0 14 3 15 #"ListaDeObjetos1"
0 0 24 3 1 #" "
0 0 14 3 11 #"CenaDaSala1"
0 0 24 3 2 #") "
0 6           4 21 6815
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:p"
 #"oint 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 170 230 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 60 0 0 0) #(struct:pulled-point 0 0 60 40 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 40 0 0)) outline \"red\"))) #(struct:translate 0 0 #(struct"
 #":crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 "
 #"600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 335.0 237.00961894323342 #(struct:translate -0.0 "
 #"25.98076211353316 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 "
 #"0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 15."
 #"000000000000007 -25.98076211353316 0 0)) 255 \"blue\"))) #(struct:tr"
 #"anslate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 800 0)"
 #" #(struct:point 800 600) #(struct:point 0 600)) #(struct:translate 0"
 #" -10 #(struct:overlay #(struct:translate 70 0 #(struct:translate 30 "
 #"30 #(struct:ellipse 60 60 0 255 \"blue\"))) #(struct:translate 0 10 "
 #"#(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:po"
 #"int 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 580 170 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 40 0 0 0) #(struct:pulled-point 0 0 40 60 0 0) #(struct:pulled-poin"
 #"t 0 0 0 60 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:cr"
 #"op (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 600"
 #") #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 440.0 380.33974596215563 #(struct:translate -0.0 17."
 #"320508075688775 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 10.00"
 #"0000000000004 -17.320508075688775 0 0)) 255 \"red\"))) #(struct:tran"
 #"slate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #"
 #"(struct:point 800 600) #(struct:point 0 600)) #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 1241/2 823/2 #(struct:translate"
 #" 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:p"
 #"ulled-point 0 0 15 0 0 0) #(struct:pulled-point 0 0 15 15 0 0) #(str"
 #"uct:pulled-point 0 0 0 15 0 0)) 255 \"green\"))) #(struct:translate "
 #"0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struc"
 #"t:point 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 10 5 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 40 0 0 0) #(struct:pulled-point 0 0 40 30 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 30 0 0)) 255 \"blue\"))) #(struct:translate 0 0 #(struct:cr"
 #"op (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 600"
 #") #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 10.0 171.3397459621556 #(struct:translate -0.0 17.32"
 #"0508075688775 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #"
 #"(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 10.0000"
 #"00000000004 -17.320508075688775 0 0)) outline \"black\"))) #(struct:"
 #"translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 800 "
 #"0) #(struct:point 800 600) #(struct:point 0 600)) #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 770 335 #(struct:translate "
 #"0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pu"
 #"lled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 20 30 0 0) #(stru"
 #"ct:pulled-point 0 0 0 30 0 0)) 255 \"black\"))) #(struct:translate 0"
 #" 0 #(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct"
 #":point 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 215 185 #(struct:translate 15 15 #(str"
 #"uct:ellipse 30 30 0 outline \"orange\"))) #(struct:translate 0 0 #(s"
 #"truct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point"
 #" 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 110 25 #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 "
 #"0 0 0) #(struct:pulled-point 0 0 20 30 0 0) #(struct:pulled-point 0 "
 #"0 0 30 0 0)) 255 \"yellow\"))) #(struct:translate 0 0 #(struct:crop "
 #"(#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) #"
 #"(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 520 320 #(struct:translate 40 40 #(struct:ellipse 80 80"
 #" 0 255 \"green\"))) #(struct:translate 0 0 #(struct:crop (#(struct:p"
 #"oint 0 0) #(struct:point 800 0) #(struct:point 800 600) #(struct:poi"
 #"nt 0 600)) #(struct:translate 0 -5.98076211353316 #(struct:overlay #"
 #"(struct:translate 270.0 0 #(struct:translate -0.0 51.96152422706632 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 60 0 0 0) #(struct:pulled-point 0 0 30.000000000000014 -5"
 #"1.96152422706632 0 0)) outline \"green\"))) #(struct:translate 0 5.9"
 #"8076211353316 #(struct:crop (#(struct:point 0 0) #(struct:point 800 "
 #"0) #(struct:point 800 600) #(struct:point 0 600)) #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 70 365 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 20 30 0 0) #(struc"
 #"t:pulled-point 0 0 0 30 0 0)) outline \"red\"))) #(struct:translate "
 #"0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struc"
 #"t:point 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 200 400 #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point"
 #" 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 200 0 0) #(struct:pull"
 #"ed-point 0 0 0 200 0 0)) 255 \"blue\"))) #(struct:translate 0 0 #(st"
 #"ruct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point "
 #"800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 359 151 #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100"
 #" 0 0 0) #(struct:pulled-point 0 0 100 100 0 0) #(struct:pulled-point"
 #" 0 0 0 100 0 0)) outline \"blue\"))) #(struct:translate 0 0 #(struct"
 #":crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 "
 #"600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 800 0 0 0) "
 #"#(struct:pulled-point 0 0 800 600 0 0) #(struct:pulled-point 0 0 0 6"
 #"00 0 0)) outline #(struct:pen \"black\" 2 solid round round)))) #(st"
 #"ruct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct"
 #":pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 800 0 0 0) #(st"
 #"ruct:pulled-point 0 0 800 600 0 0) #(struct:pulled-point 0 0 0 600 0"
 #" 0)) 255 \"white\"))))))))))))))))))))))))))))))))))))))))))))))))))"
 #")))))))))))))))))))) #(struct:bb 800 600 600.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"DesenhaObjetosDaSala"
0 0 24 3 1 #" "
0 0 14 3 12 #"ListaObjetos"
0 0 24 3 1 #" "
0 0 14 3 10 #"CenaDaSala"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 12 #"ListaObjetos"
0 0 24 3 2 #") "
0 0 14 3 10 #"CenaDaSala"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 12 #"Objeto-forma"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 12 #"ListaObjetos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 6 #"pos-px"
0 0 24 3 2 #" ("
0 0 14 3 14 #"Objeto-posicao"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 12 #"ListaObjetos"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 6 #"pos-py"
0 0 24 3 2 #" ("
0 0 14 3 14 #"Objeto-posicao"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 12 #"ListaObjetos"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 20 #"DesenhaObjetosDaSala"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 12 #"ListaObjetos"
0 0 24 3 2 #") "
0 0 14 3 10 #"CenaDaSala"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; DesenhaBolha: ListaDeBolha Cena -> Cena"
0 0 24 29 1 #"\n"
0 0 17 3 107
(
 #";; Objetivo: Dada uma cena e uma ListaDeBolhas, preenche a mesma com"
 #" todas as bolhas que existem no sistema"
) 0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #";; Exemplo: (DesenhaBolha ListaDeBolhas1 (DesenhaObjetosDaSala Lista"
 #"DeObjetos1 CenaDaSala1)) ->"
) 0 6           4 17 9176
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:p"
 #"oint 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 395 295 #(struct:translate 5 5 #(struct:"
 #"ellipse 10 10 0 outline \"blue\"))) #(struct:translate 0 0 #(struct:"
 #"crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 6"
 #"00) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 390 290 #(struct:translate 10 10 #(struct:ellipse "
 #"20 20 0 outline \"blue\"))) #(struct:translate 0 0 #(struct:crop (#("
 #"struct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) #(st"
 #"ruct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 385 285 #(struct:translate 15 15 #(struct:ellipse 30 30 0 "
 #"outline \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:p"
 #"oint 0 0) #(struct:point 800 0) #(struct:point 800 600) #(struct:poi"
 #"nt 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 395 295 #(struct:translate 5 5 #(struct:ellipse 10 10 0 outline \""
 #"blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) "
 #"#(struct:point 800 0) #(struct:point 800 600) #(struct:point 0 600))"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 390 290 "
 #"#(struct:translate 10 10 #(struct:ellipse 20 20 0 outline \"blue\"))"
 #") #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct"
 #":point 800 0) #(struct:point 800 600) #(struct:point 0 600)) #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 385 285 #(struct"
 #":translate 15 15 #(struct:ellipse 30 30 0 outline \"blue\"))) #(stru"
 #"ct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 8"
 #"00 0) #(struct:point 800 600) #(struct:point 0 600)) #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 395 295 #(struct:transla"
 #"te 5 5 #(struct:ellipse 10 10 0 outline \"blue\"))) #(struct:transla"
 #"te 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(st"
 #"ruct:point 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 390 290 #(struct:translate 10 10 #"
 #"(struct:ellipse 20 20 0 outline \"blue\"))) #(struct:translate 0 0 #"
 #"(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:poi"
 #"nt 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 385 285 #(struct:translate 15 15 #(struct:"
 #"ellipse 30 30 0 outline \"blue\"))) #(struct:translate 0 0 #(struct:"
 #"crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 6"
 #"00) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 170 230 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 60 0 0 0"
 #") #(struct:pulled-point 0 0 60 40 0 0) #(struct:pulled-point 0 0 0 4"
 #"0 0 0)) outline \"red\"))) #(struct:translate 0 0 #(struct:crop (#(s"
 #"truct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) #(str"
 #"uct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 335.0 237.00961894323342 #(struct:translate -0.0 25.9807621"
 #"1353316 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 15.0000000000"
 #"00007 -25.98076211353316 0 0)) 255 \"blue\"))) #(struct:translate 0 "
 #"0 #(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:"
 #"point 800 600) #(struct:point 0 600)) #(struct:translate 0 -10 #(str"
 #"uct:overlay #(struct:translate 70 0 #(struct:translate 30 30 #(struc"
 #"t:ellipse 60 60 0 255 \"blue\"))) #(struct:translate 0 10 #(struct:c"
 #"rop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 60"
 #"0) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 580 170 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0)"
 #" #(struct:pulled-point 0 0 40 60 0 0) #(struct:pulled-point 0 0 0 60"
 #" 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:crop (#(stru"
 #"ct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) #(struct"
 #":point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 440.0 380.33974596215563 #(struct:translate -0.0 17.3205080756"
 #"88775 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:"
 #"pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 10.000000000000"
 #"004 -17.320508075688775 0 0)) 255 \"red\"))) #(struct:translate 0 0 "
 #"#(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:po"
 #"int 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 1241/2 823/2 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poin"
 #"t 0 0 15 0 0 0) #(struct:pulled-point 0 0 15 15 0 0) #(struct:pulled"
 #"-point 0 0 0 15 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(stru"
 #"ct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 80"
 #"0 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 10 5 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0"
 #") #(struct:pulled-point 0 0 40 30 0 0) #(struct:pulled-point 0 0 0 3"
 #"0 0 0)) 255 \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(stru"
 #"ct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) #(struct"
 #":point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 10.0 171.3397459621556 #(struct:translate -0.0 17.320508075688"
 #"775 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pu"
 #"lled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 10.00000000000000"
 #"4 -17.320508075688775 0 0)) outline \"black\"))) #(struct:translate "
 #"0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struc"
 #"t:point 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 770 335 #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point"
 #" 0 0 20 0 0 0) #(struct:pulled-point 0 0 20 30 0 0) #(struct:pulled-"
 #"point 0 0 0 30 0 0)) 255 \"black\"))) #(struct:translate 0 0 #(struc"
 #"t:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800"
 #" 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 215 185 #(struct:translate 15 15 #(struct:ellips"
 #"e 30 30 0 outline \"orange\"))) #(struct:translate 0 0 #(struct:crop"
 #" (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) "
 #"#(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 110 25 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(s"
 #"truct:pulled-point 0 0 20 30 0 0) #(struct:pulled-point 0 0 0 30 0 0"
 #")) 255 \"yellow\"))) #(struct:translate 0 0 #(struct:crop (#(struct:"
 #"point 0 0) #(struct:point 800 0) #(struct:point 800 600) #(struct:po"
 #"int 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 520 320 #(struct:translate 40 40 #(struct:ellipse 80 80 0 255 \"g"
 #"reen\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) "
 #"#(struct:point 800 0) #(struct:point 800 600) #(struct:point 0 600))"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 592.0 55"
 #"1.3397459621556 #(struct:translate -0.0 17.320508075688775 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 20 0 0 0) #(struct:pulled-point 0 0 10.000000000000004 -17.3205080"
 #"75688775 0 0)) outline \"green\"))) #(struct:translate 0 0 #(struct:"
 #"crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 6"
 #"00) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 70 365 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0)"
 #" #(struct:pulled-point 0 0 20 30 0 0) #(struct:pulled-point 0 0 0 30"
 #" 0 0)) outline \"red\"))) #(struct:translate 0 0 #(struct:crop (#(st"
 #"ruct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) #(stru"
 #"ct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 90 25 #(struct:translate 0 0 #(struct:polygon (#(struct:pull"
 #"ed-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:p"
 #"ulled-point 0 0 20 30 0 0) #(struct:pulled-point 0 0 0 30 0 0)) 255 "
 #"\"blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0"
 #") #(struct:point 800 0) #(struct:point 800 600) #(struct:point 0 600"
 #")) #(struct:translate 0 0 #(struct:overlay #(struct:translate 399 18"
 #"6 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point "
 #"0 0 20 30 0 0) #(struct:pulled-point 0 0 0 30 0 0)) 255 \"blue\"))) "
 #"#(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:p"
 #"oint 800 0) #(struct:point 800 600) #(struct:point 0 600)) #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(stru"
 #"ct:pulled-point 0 0 800 0 0 0) #(struct:pulled-point 0 0 800 600 0 0"
 #") #(struct:pulled-point 0 0 0 600 0 0)) outline #(struct:pen \"black"
 #"\" 2 solid round round)))) #(struct:translate 0 0 #(struct:translate"
 #" 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:p"
 #"ulled-point 0 0 800 0 0 0) #(struct:pulled-point 0 0 800 600 0 0) #("
 #"struct:pulled-point 0 0 0 600 0 0)) 255 \"white\")))))))))))))))))))"
 #"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))"
 #"))))))))))))))))))) #(struct:bb 800 600 600.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 17 3 10 #";; Testes:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"DesenhaBolha"
0 0 24 3 1 #" "
0 0 14 3 14 #"ListaDeBolhas1"
0 0 24 3 2 #" ("
0 0 14 3 20 #"DesenhaObjetosDaSala"
0 0 24 3 1 #" "
0 0 14 3 15 #"ListaDeObjetos1"
0 0 24 3 1 #" "
0 0 14 3 11 #"CenaDaSala1"
0 0 24 3 3 #")) "
0 6           4 21 9203
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:p"
 #"oint 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 295 295 #(struct:translate 5 5 #(struct:"
 #"ellipse 10 10 0 outline \"blue\"))) #(struct:translate 0 0 #(struct:"
 #"crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 6"
 #"00) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 290 290 #(struct:translate 10 10 #(struct:ellipse "
 #"20 20 0 outline \"blue\"))) #(struct:translate 0 0 #(struct:crop (#("
 #"struct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) #(st"
 #"ruct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 285 285 #(struct:translate 15 15 #(struct:ellipse 30 30 0 "
 #"outline \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:p"
 #"oint 0 0) #(struct:point 800 0) #(struct:point 800 600) #(struct:poi"
 #"nt 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 295 295 #(struct:translate 5 5 #(struct:ellipse 10 10 0 outline \""
 #"blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) "
 #"#(struct:point 800 0) #(struct:point 800 600) #(struct:point 0 600))"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 290 290 "
 #"#(struct:translate 10 10 #(struct:ellipse 20 20 0 outline \"blue\"))"
 #") #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct"
 #":point 800 0) #(struct:point 800 600) #(struct:point 0 600)) #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 285 285 #(struct"
 #":translate 15 15 #(struct:ellipse 30 30 0 outline \"blue\"))) #(stru"
 #"ct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 8"
 #"00 0) #(struct:point 800 600) #(struct:point 0 600)) #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 295 295 #(struct:transla"
 #"te 5 5 #(struct:ellipse 10 10 0 outline \"blue\"))) #(struct:transla"
 #"te 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(st"
 #"ruct:point 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 290 290 #(struct:translate 10 10 #"
 #"(struct:ellipse 20 20 0 outline \"blue\"))) #(struct:translate 0 0 #"
 #"(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:poi"
 #"nt 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 285 285 #(struct:translate 15 15 #(struct:"
 #"ellipse 30 30 0 outline \"blue\"))) #(struct:translate 0 0 #(struct:"
 #"crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 6"
 #"00) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 170 230 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 60 0 0 0"
 #") #(struct:pulled-point 0 0 60 40 0 0) #(struct:pulled-point 0 0 0 4"
 #"0 0 0)) outline \"red\"))) #(struct:translate 0 0 #(struct:crop (#(s"
 #"truct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) #(str"
 #"uct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 335.0 237.00961894323342 #(struct:translate -0.0 25.9807621"
 #"1353316 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 15.0000000000"
 #"00007 -25.98076211353316 0 0)) 255 \"blue\"))) #(struct:translate 0 "
 #"0 #(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:"
 #"point 800 600) #(struct:point 0 600)) #(struct:translate 0 -10 #(str"
 #"uct:overlay #(struct:translate 70 0 #(struct:translate 30 30 #(struc"
 #"t:ellipse 60 60 0 255 \"blue\"))) #(struct:translate 0 10 #(struct:c"
 #"rop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 60"
 #"0) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 580 170 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0)"
 #" #(struct:pulled-point 0 0 40 60 0 0) #(struct:pulled-point 0 0 0 60"
 #" 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:crop (#(stru"
 #"ct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) #(struct"
 #":point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 440.0 380.33974596215563 #(struct:translate -0.0 17.3205080756"
 #"88775 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:"
 #"pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 10.000000000000"
 #"004 -17.320508075688775 0 0)) 255 \"red\"))) #(struct:translate 0 0 "
 #"#(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:po"
 #"int 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 1241/2 823/2 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poin"
 #"t 0 0 15 0 0 0) #(struct:pulled-point 0 0 15 15 0 0) #(struct:pulled"
 #"-point 0 0 0 15 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(stru"
 #"ct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 80"
 #"0 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 10 5 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0"
 #") #(struct:pulled-point 0 0 40 30 0 0) #(struct:pulled-point 0 0 0 3"
 #"0 0 0)) 255 \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(stru"
 #"ct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) #(struct"
 #":point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 10.0 171.3397459621556 #(struct:translate -0.0 17.320508075688"
 #"775 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pu"
 #"lled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 10.00000000000000"
 #"4 -17.320508075688775 0 0)) outline \"black\"))) #(struct:translate "
 #"0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struc"
 #"t:point 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 770 335 #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point"
 #" 0 0 20 0 0 0) #(struct:pulled-point 0 0 20 30 0 0) #(struct:pulled-"
 #"point 0 0 0 30 0 0)) 255 \"black\"))) #(struct:translate 0 0 #(struc"
 #"t:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800"
 #" 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 215 185 #(struct:translate 15 15 #(struct:ellips"
 #"e 30 30 0 outline \"orange\"))) #(struct:translate 0 0 #(struct:crop"
 #" (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) "
 #"#(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 110 25 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(s"
 #"truct:pulled-point 0 0 20 30 0 0) #(struct:pulled-point 0 0 0 30 0 0"
 #")) 255 \"yellow\"))) #(struct:translate 0 0 #(struct:crop (#(struct:"
 #"point 0 0) #(struct:point 800 0) #(struct:point 800 600) #(struct:po"
 #"int 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 520 320 #(struct:translate 40 40 #(struct:ellipse 80 80 0 255 \"g"
 #"reen\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) "
 #"#(struct:point 800 0) #(struct:point 800 600) #(struct:point 0 600))"
 #" #(struct:translate 0 -5.98076211353316 #(struct:overlay #(struct:tr"
 #"anslate 270.0 0 #(struct:translate -0.0 51.96152422706632 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 60 0 0 0) #(struct:pulled-point 0 0 30.000000000000014 -51.96152422"
 #"706632 0 0)) outline \"green\"))) #(struct:translate 0 5.98076211353"
 #"316 #(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struc"
 #"t:point 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 70 365 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 20 0 0 0) #(struct:pulled-point 0 0 20 30 0 0) #(struct:pulled-p"
 #"oint 0 0 0 30 0 0)) outline \"red\"))) #(struct:translate 0 0 #(stru"
 #"ct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 80"
 #"0 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 200 400 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0"
 #" 0 0) #(struct:pulled-point 0 0 200 200 0 0) #(struct:pulled-point 0"
 #" 0 0 200 0 0)) 255 \"blue\"))) #(struct:translate 0 0 #(struct:crop "
 #"(#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) #"
 #"(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 359 151 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #("
 #"struct:pulled-point 0 0 100 100 0 0) #(struct:pulled-point 0 0 0 100"
 #" 0 0)) outline \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(s"
 #"truct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) #(str"
 #"uct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulle"
 #"d-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 800 0 0 0) #(struct:p"
 #"ulled-point 0 0 800 600 0 0) #(struct:pulled-point 0 0 0 600 0 0)) o"
 #"utline #(struct:pen \"black\" 2 solid round round)))) #(struct:trans"
 #"late 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 800 0 0 0) #(struct:pulle"
 #"d-point 0 0 800 600 0 0) #(struct:"
 #"pulled-point 0 0 0 600 0 0)) 255 \"white\"))))))))))))))))))))))))))"
 #"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))"
 #")))))))))))) #(struct:bb 800 600 600.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"DesenhaBolha"
0 0 24 3 1 #" "
0 0 14 3 3 #"ldb"
0 0 24 3 1 #" "
0 0 14 3 5 #"scene"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"ldb"
0 0 24 3 2 #") "
0 0 14 3 5 #"scene"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 24 3 2 #" ("
0 0 14 3 10 #"Bolha-raio"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"ldb"
0 0 24 3 3 #")) "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 6 #"pos-px"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-pos"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"ldb"
0 0 24 3 5 #"))) ("
0 0 14 3 6 #"pos-py"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-pos"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"ldb"
0 0 24 3 5 #"))) ("
0 0 14 3 12 #"DesenhaBolha"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"ldb"
0 0 24 3 2 #") "
0 0 14 3 5 #"scene"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; AlteraPosicoes: ListaDeBolhas Sala -> ListaDeBolhas"
0 0 24 29 1 #"\n"
0 0 17 3 132
(
 #";; Objetivo: Dada uma lista "
 #"de bolhas, altera as posi\303\247\303\265es das mesmas com base em s"
 #"uas velocidades, para manter o fluxo do programa"
) 0 0 24 29 1 #"\n"
0 0 17 3 59
#";; Exemplo: (AlteraPosicoes ListaDeBolhas1 ListaDeObjetos1)"
0 0 24 29 1 #"\n"
0 0 17 3 110
(
 #";; (DesenhaBolha (AlteraPosicoes ListaDeBolhas1 Sala1) (DesenhaObjet"
 #"osDaSala ListaDeObjetos1 CenaDaSala1)) -> "
) 0 6           4 17 9198
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:p"
 #"oint 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 396 605/2 #(struct:translate 5 5 #(struc"
 #"t:ellipse 10 10 0 outline \"blue\"))) #(struct:translate 0 0 #(struc"
 #"t:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800"
 #" 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 785/2 295 #(struct:translate 10 10 #(struct:elli"
 #"pse 20 20 0 outline \"blue\"))) #(struct:translate 0 0 #(struct:crop"
 #" (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) "
 #"#(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 385 577/2 #(struct:translate 15 15 #(struct:ellipse 30"
 #" 30 0 outline \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(st"
 #"ruct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) #(stru"
 #"ct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 797/2 295 #(struct:translate 5 5 #(struct:ellipse 10 10 0 ou"
 #"tline \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:poi"
 #"nt 0 0) #(struct:point 800 0) #(struct:point 800 600) #(struct:point"
 #" 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"787/2 293 #(struct:translate 10 10 #(struct:ellipse 20 20 0 outline "
 #"\"blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0"
 #") #(struct:point 800 0) #(struct:point 800 600) #(struct:point 0 600"
 #")) #(struct:translate 0 0 #(struct:overlay #(struct:translate 775/2 "
 #"555/2 #(struct:translate 15 15 #(struct:ellipse 30 30 0 outline \"bl"
 #"ue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #("
 #"struct:point 800 0) #(struct:point 800 600) #(struct:point 0 600)) #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 396 605/2 "
 #"#(struct:translate 5 5 #(struct:ellipse 10 10 0 outline \"blue\"))) "
 #"#(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:p"
 #"oint 800 0) #(struct:point 800 600) #(struct:point 0 600)) #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 785/2 285 #(struct"
 #":translate 10 10 #(struct:ellipse 20 20 0 outline \"blue\"))) #(stru"
 #"ct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 8"
 #"00 0) #(struct:point 800 600) #(struct:point 0 600)) #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 775/2 585/2 #(struct:tra"
 #"nslate 15 15 #(struct:ellipse 30 30 0 outline \"blue\"))) #(struct:t"
 #"ranslate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 800 0"
 #") #(struct:point 800 600) #(struct:point 0 600)) #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 170 230 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 60 0 0 0) #(struct:pulled-point 0 0 60 40 0 0) #(struc"
 #"t:pulled-point 0 0 0 40 0 0)) outline \"red\"))) #(struct:translate "
 #"0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struc"
 #"t:point 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 335.0 237.00961894323342 #(struct:tra"
 #"nslate -0.0 25.98076211353316 #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-p"
 #"oint 0 0 15.000000000000007 -25.98076211353316 0 0)) 255 \"blue\")))"
 #" #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:"
 #"point 800 0) #(struct:point 800 600) #(struct:point 0 600)) #(struct"
 #":translate 0 -10 #(struct:overlay #(struct:translate 70 0 #(struct:t"
 #"ranslate 30 30 #(struct:ellipse 60 60 0 255 \"blue\"))) #(struct:tra"
 #"nslate 0 10 #(struct:crop (#(struct:point 0 0) #(struct:point 800 0)"
 #" #(struct:point 800 600) #(struct:point 0 600)) #(struct:translate 0"
 #" 0 #(struct:overlay #(struct:translate 580 170 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 60 0 0) #(struct"
 #":pulled-point 0 0 0 60 0 0)) 255 \"green\"))) #(struct:translate 0 0"
 #" #(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:p"
 #"oint 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 440.0 380.33974596215563 #(struct:transl"
 #"ate -0.0 17.320508075688775 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 10.000000000000004 -17.320508075688775 0 0)) 255 \"red\"))) #"
 #"(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:po"
 #"int 800 0) #(struct:point 800 600) #(struct:point 0 600)) #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 1241/2 823/2 #(stru"
 #"ct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0"
 #") #(struct:pulled-point 0 0 15 0 0 0) #(struct:pulled-point 0 0 15 1"
 #"5 0 0) #(struct:pulled-point 0 0 0 15 0 0)) 255 \"green\"))) #(struc"
 #"t:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 80"
 #"0 0) #(struct:point 800 600) #(struct:point 0 600)) #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 10 5 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 40 0 0 0) #(struct:pulled-point 0 0 40 30 0 0) #(struc"
 #"t:pulled-point 0 0 0 30 0 0)) 255 \"blue\"))) #(struct:translate 0 0"
 #" #(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:p"
 #"oint 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 10.0 171.3397459621556 #(struct:translat"
 #"e -0.0 17.320508075688775 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point"
 #" 0 0 10.000000000000004 -17.320508075688775 0 0)) outline \"black\")"
 #")) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struc"
 #"t:point 800 0) #(struct:point 800 600) #(struct:point 0 600)) #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 770 335 #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 20 30"
 #" 0 0) #(struct:pulled-point 0 0 0 30 0 0)) 255 \"black\"))) #(struct"
 #":translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 800"
 #" 0) #(struct:point 800 600) #(struct:point 0 600)) #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 215 185 #(struct:translate"
 #" 15 15 #(struct:ellipse 30 30 0 outline \"orange\"))) #(struct:trans"
 #"late 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #("
 #"struct:point 800 600) #(struct:point 0 600)) #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 110 25 #(struct:translate 0 0 #("
 #"struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-p"
 #"oint 0 0 20 0 0 0) #(struct:pulled-point 0 0 20 30 0 0) #(struct:pul"
 #"led-point 0 0 0 30 0 0)) 255 \"yellow\"))) #(struct:translate 0 0 #("
 #"struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:poin"
 #"t 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:translate 520 320 #(struct:translate 40 40 #(struct:e"
 #"llipse 80 80 0 255 \"green\"))) #(struct:translate 0 0 #(struct:crop"
 #" (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) "
 #"#(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 592.0 551.3397459621556 #(struct:translate -0.0 17.320"
 #"508075688775 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 10.00000"
 #"0000000004 -17.320508075688775 0 0)) outline \"green\"))) #(struct:t"
 #"ranslate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 800 0"
 #") #(struct:point 800 600) #(struct:point 0 600)) #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 70 365 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 20 30 0 0) #(struct"
 #":pulled-point 0 0 0 30 0 0)) outline \"red\"))) #(struct:translate 0"
 #" 0 #(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct"
 #":point 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 90 25 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 20 0 0 0) #(struct:pulled-point 0 0 20 30 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 30 0 0)) 255 \"blue\"))) #(struct:translate 0 0 #(struct:cr"
 #"op (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 600"
 #") #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 399 186 #(struct:translate 0 0 #(struct:polygon (#(s"
 #"truct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) "
 #"#(struct:pulled-point 0 0 20 30 0 0) #(struct:pulled-point 0 0 0 30 "
 #"0 0)) 255 \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct"
 #":point 0 0) #(struct:point 800 0) #(struct:point 800 600) #(struct:p"
 #"oint 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 0 0 0 0) #(struct:pulled-point 0 0 800 0 0 0) #(struct:pulled"
 #"-point 0 0 800 600 0 0) #(struct:pulled-point 0 0 0 600 0 0)) outlin"
 #"e #(struct:pen \"black\" 2 solid round round)))) #(struct:translate "
 #"0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 800 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 800 600 0 0) #(struct:pulled-point 0 0 0 600 0 0)) 255 \"whit"
 #"e\")))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))"
 #"))))))))))))))))))))))))))))))))))))))))) #(struct:bb 800 600 600.0)"
 #" #f)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";;Teste"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"DesenhaBolha"
0 0 24 3 2 #" ("
0 0 14 3 14 #"AlteraPosicoes"
0 0 24 3 1 #" "
0 0 14 3 14 #"ListaDeBolhas1"
0 0 24 3 1 #" "
0 0 14 3 5 #"Sala1"
0 0 24 3 3 #") ("
0 0 14 3 20 #"DesenhaObjetosDaSala"
0 0 24 3 1 #" "
0 0 14 3 15 #"ListaDeObjetos1"
0 0 24 3 1 #" "
0 0 14 3 11 #"CenaDaSala1"
0 0 24 3 3 #")) "
0 6           4 21 9229
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:p"
 #"oint 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 294 605/2 #(struct:translate 5 5 #(struc"
 #"t:ellipse 10 10 0 outline \"blue\"))) #(struct:translate 0 0 #(struc"
 #"t:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800"
 #" 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 585/2 295 #(struct:translate 10 10 #(struct:elli"
 #"pse 20 20 0 outline \"blue\"))) #(struct:translate 0 0 #(struct:crop"
 #" (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) "
 #"#(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 569/2 561/2 #(struct:translate 15 15 #(struct:ellipse "
 #"30 30 0 outline \"blue\"))) #(struct:translate 0 0 #(struct:crop (#("
 #"struct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) #(st"
 #"ruct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 597/2 591/2 #(struct:translate 5 5 #(struct:ellipse 10 10 "
 #"0 outline \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct"
 #":point 0 0) #(struct:point 800 0) #(struct:point 800 600) #(struct:p"
 #"oint 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 573/2 287 #(struct:translate 10 10 #(struct:ellipse 20 20 0 outl"
 #"ine \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point"
 #" 0 0) #(struct:point 800 0) #(struct:point 800 600) #(struct:point 0"
 #" 600)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 57"
 #"5/2 555/2 #(struct:translate 15 15 #(struct:ellipse 30 30 0 outline "
 #"\"blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0"
 #") #(struct:point 800 0) #(struct:point 800 600) #(struct:point 0 600"
 #")) #(struct:translate 0 0 #(struct:overlay #(struct:translate 296 60"
 #"5/2 #(struct:translate 5 5 #(struct:ellipse 10 10 0 outline \"blue\""
 #"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(stru"
 #"ct:point 800 0) #(struct:point 800 600) #(struct:point 0 600)) #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 575/2 285 #(st"
 #"ruct:translate 10 10 #(struct:ellipse 20 20 0 outline \"blue\"))) #("
 #"struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:poi"
 #"nt 800 0) #(struct:point 800 600) #(struct:point 0 600)) #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 575/2 585/2 #(struct"
 #":translate 15 15 #(struct:ellipse 30 30 0 outline \"blue\"))) #(stru"
 #"ct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 8"
 #"00 0) #(struct:point 800 600) #(struct:point 0 600)) #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 170 230 #(struct:transla"
 #"te 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct"
 #":pulled-point 0 0 60 0 0 0) #(struct:pulled-point 0 0 60 40 0 0) #(s"
 #"truct:pulled-point 0 0 0 40 0 0)) outline \"red\"))) #(struct:transl"
 #"ate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(s"
 #"truct:point 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 335.0 237.00961894323342 #(struct"
 #":translate -0.0 25.98076211353316 #(struct:polygon (#(struct:pulled-"
 #"point 0 0 0 0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pull"
 #"ed-point 0 0 15.000000000000007 -"
 #"25.98076211353316 0 0)) 255 \"blue\"))) #(struct:translate 0 0 #(str"
 #"uct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 8"
 #"00 600) #(struct:point 0 600)) #(struct:translate 0 -10 #(struct:ove"
 #"rlay #(struct:translate 70 0 #(struct:translate 30 30 #(struct:ellip"
 #"se 60 60 0 255 \"blue\"))) #(struct:translate 0 10 #(struct:crop (#("
 #"struct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) #(st"
 #"ruct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 580 170 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(stru"
 #"ct:pulled-point 0 0 40 60 0 0) #(struct:pulled-point 0 0 0 60 0 0)) "
 #"255 \"green\"))) #(struct:translate 0 0 #(struct:crop (#(struct:poin"
 #"t 0 0) #(struct:point 800 0) #(struct:point 800 600) #(struct:point "
 #"0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 4"
 #"40.0 380.33974596215563 #(struct:translate -0.0 17.320508075688775 #"
 #"(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-"
 #"point 0 0 20 0 0 0) #(struct:pulled-point 0 0 10.000000000000004 -17"
 #".320508075688775 0 0)) 255 \"red\"))) #(struct:translate 0 0 #(struc"
 #"t:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800"
 #" 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 1241/2 823/2 #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 1"
 #"5 0 0 0) #(struct:pulled-point 0 0 15 15 0 0) #(struct:pulled-point "
 #"0 0 0 15 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:crop"
 #" (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) "
 #"#(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 10 5 #(struct:translate 0 0 #(struct:polygon (#(struct"
 #":pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(str"
 #"uct:pulled-point 0 0 40 30 0 0) #(struct:pulled-point 0 0 0 30 0 0))"
 #" 255 \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:poin"
 #"t 0 0) #(struct:point 800 0) #(struct:point 800 600) #(struct:point "
 #"0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 1"
 #"0.0 171.3397459621556 #(struct:translate -0.0 17.320508075688775 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 20 0 0 0) #(struct:pulled-point 0 0 10.000000000000004 -17.3"
 #"20508075688775 0 0)) outline \"black\"))) #(struct:translate 0 0 #(s"
 #"truct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point"
 #" 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 770 335 #(struct:translate 0 0 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20"
 #" 0 0 0) #(struct:pulled-point 0 0 20 30 0 0) #(struct:pulled-point 0"
 #" 0 0 30 0 0)) 255 \"black\"))) #(struct:translate 0 0 #(struct:crop "
 #"(#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) #"
 #"(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 215 185 #(struct:translate 15 15 #(struct:ellipse 30 30"
 #" 0 outline \"orange\"))) #(struct:translate 0 0 #(struct:crop (#(str"
 #"uct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) #(struc"
 #"t:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 110 25 #(struct:translate 0 0 #(struct:polygon (#(struct:pull"
 #"ed-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:p"
 #"ulled-point 0 0 20 30 0 0) #(struct:pulled-point 0 0 0 30 0 0)) 255 "
 #"\"yellow\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0"
 #" 0) #(struct:point 800 0) #(struct:point 800 600) #(struct:point 0 6"
 #"00)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 520 "
 #"320 #(struct:translate 40 40 #(struct:ellipse 80 80 0 255 \"green\")"
 #")) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struc"
 #"t:point 800 0) #(struct:point 800 600) #(struct:point 0 600)) #(stru"
 #"ct:translate 0 -5.98076211353316 #(struct:overlay #(struct:translate"
 #" 270.0 0 #(struct:translate -0.0 51.96152422706632 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 60 0 0"
 #" 0) #(struct:pulled-point 0 0 30.000000000000014 -51.96152422706632 "
 #"0 0)) outline \"green\"))) #(struct:translate 0 5.98076211353316 #(s"
 #"truct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point"
 #" 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 70 365 #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 "
 #"0 0 0) #(struct:pulled-point 0 0 20 30 0 0) #(struct:pulled-point 0 "
 #"0 0 30 0 0)) outline \"red\"))) #(struct:translate 0 0 #(struct:crop"
 #" (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) "
 #"#(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 200 400 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #"
 #"(struct:pulled-point 0 0 200 200 0 0) #(struct:pulled-point 0 0 0 20"
 #"0 0 0)) 255 \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(stru"
 #"ct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) #(struct"
 #":point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 359 151 #(struct:translate 0 0 #(struct:polygon (#(struct:pull"
 #"ed-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 100 0 0 0) #(struct:"
 #"pulled-point 0 0 100 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) "
 #"outline \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:p"
 #"oint 0 0) #(struct:point 800 0) #(struct:point 800 600) #(struct:poi"
 #"nt 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 800 0 0 0) #(struct:pulled-p"
 #"oint 0 0 800 600 0 0) #(struct:pulled-point 0 0 0 600 0 0)) outline "
 #"#(struct:pen \"black\" 2 solid round round)))) #(struct:translate 0 "
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 800 0 0 0) #(struct:pulled-point"
 #" 0 0 800 600 0 0) #(struct:pulled"
 #"-point 0 0 0 600 0 0)) 255 \"white\"))))))))))))))))))))))))))))))))"
 #"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))"
 #")))))) #(struct:bb 800 600 600.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"AlteraPosicoes"
0 0 24 3 1 #" "
0 0 14 3 3 #"ldb"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"ldb"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 11 #"colideBolha"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"ldb"
0 0 24 3 2 #") "
0 0 14 3 4 #"sala"
0 0 24 3 3 #") ("
0 0 14 3 14 #"AlteraPosicoes"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"ldb"
0 0 24 3 2 #") "
0 0 14 3 4 #"sala"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; DesenhaBolha: Bolha Sala -> ListaDeBolhas"
0 0 24 29 1 #"\n"
0 0 17 3 184
(
 #";; Objetivo: A partir de uma bol"
 #"ha e uma sala, calcula as colis\303\265es e o movimento de uma bolha"
 #" na sala, retornando uma ListaDeBolhas vazia caso a bolha tenha entr"
 #"ado em algum dos casos"
) 0 0 24 29 1 #"\n"
0 0 17 3 119
(
 #";; em que ela deva estourar, ou uma ListaDeBolhas com um elemento ca"
 #"so, ela tenha apenas se movimentado dentro da sala."
) 0 0 24 29 1 #"\n"
0 0 17 3 124
(
 #";; Exemplo: (DesenhaBolha (colideBolha (first ListaDeBolhas1) Sala1)"
 #" (DesenhaObjetosDaSala ListaDeObjetos1 CenaDaSala1)) -> "
) 0 6           4 17 7054
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:p"
 #"oint 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 396 605/2 #(struct:translate 5 5 #(struc"
 #"t:ellipse 10 10 0 outline \"blue\"))) #(struct:translate 0 0 #(struc"
 #"t:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800"
 #" 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 170 230 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 60 0 0"
 #" 0) #(struct:pulled-point 0 0 60 40 0 0) #(struct:pulled-point 0 0 0"
 #" 40 0 0)) outline \"red\"))) #(struct:translate 0 0 #(struct:crop (#"
 #"(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) #(s"
 #"truct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 335.0 237.00961894323342 #(struct:translate -0.0 25.98076"
 #"211353316 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 15.00000000"
 #"0000007 -25.98076211353316 0 0)) 255 \"blue\"))) #(struct:translate "
 #"0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struc"
 #"t:point 800 600) #(struct:point 0 600)) #(struct:translate 0 -10 #(s"
 #"truct:overlay #(struct:translate 70 0 #(struct:translate 30 30 #(str"
 #"uct:ellipse 60 60 0 255 \"blue\"))) #(struct:translate 0 10 #(struct"
 #":crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 "
 #"600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 580 170 #(struct:translate 0 0 #(struct:polygon ("
 #"#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 "
 #"0) #(struct:pulled-point 0 0 40 60 0 0) #(struct:pulled-point 0 0 0 "
 #"60 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:crop (#(st"
 #"ruct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) #(stru"
 #"ct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 440.0 380.33974596215563 #(struct:translate -0.0 17.32050807"
 #"5688775 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 10.0000000000"
 #"00004 -17.320508075688775 0 0)) 255 \"red\"))) #(struct:translate 0 "
 #"0 #(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:"
 #"point 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 1241/2 823/2 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 15 0 0 0) #(struct:pulled-point 0 0 15 15 0 0) #(struct:pull"
 #"ed-point 0 0 0 15 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(st"
 #"ruct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point "
 #"800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 10 5 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0"
 #" 0) #(struct:pulled-point 0 0 40 30 0 0) #(struct:pulled-point 0 0 0"
 #" 30 0 0)) 255 \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(st"
 #"ruct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) #(stru"
 #"ct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 10.0 171.3397459621556 #(struct:translate -0.0 17.3205080756"
 #"88775 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:"
 #"pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 10.000000000000"
 #"004 -17.320508075688775 0 0)) outline \"black\"))) #(struct:translat"
 #"e 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(str"
 #"uct:point 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 770 335 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 20 0 0 0) #(struct:pulled-point 0 0 20 30 0 0) #(struct:pulle"
 #"d-point 0 0 0 30 0 0)) 255 \"black\"))) #(struct:translate 0 0 #(str"
 #"uct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 8"
 #"00 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 215 185 #(struct:translate 15 15 #(struct:elli"
 #"pse 30 30 0 outline \"orange\"))) #(struct:translate 0 0 #(struct:cr"
 #"op (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 600"
 #") #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 110 25 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #"
 #"(struct:pulled-point 0 0 20 30 0 0) #(struct:pulled-point 0 0 0 30 0"
 #" 0)) 255 \"yellow\"))) #(struct:translate 0 0 #(struct:crop (#(struc"
 #"t:point 0 0) #(struct:point 800 0) #(struct:point 800 600) #(struct:"
 #"point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 520 320 #(struct:translate 40"
 #" 40 #(struct:ellipse 80 80 0 255 \"green\"))) #(struct:translate 0 0"
 #" #(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:p"
 #"oint 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 592.0 551.3397459621556 #(struct:transla"
 #"te -0.0 17.320508075688775 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-poin"
 #"t 0 0 10.000000000000004 -17.320508075688775 0 0)) outline \"green\""
 #"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(stru"
 #"ct:point 800 0) #(struct:point 800 600) #(struct:point 0 600)) #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 70 365 #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 20 30"
 #" 0 0) #(struct:pulled-point 0 0 0 30 0 0)) outline \"red\"))) #(stru"
 #"ct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 8"
 #"00 0) #(struct:point 800 600) #(struct:point 0 600)) #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 90 25 #(struct:translate"
 #" 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:p"
 #"ulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 20 30 0 0) #(str"
 #"uct:pulled-point 0 0 0 30 0 0)) 255 \"blue\"))) #(struct:translate 0"
 #" 0 #(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct"
 #":point 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 399 186 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 20 0 0 0) #(struct:pulled-point 0 0 20 30 0 0) #(struct:pulled-p"
 #"oint 0 0 0 30 0 0)) 255 \"blue\"))) #(struct:translate 0 0 #(struct:"
 #"crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 6"
 #"00) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 800 0 0 0) #"
 #"(struct:pulled-point 0 0 800 600 0 0) #(struct:pulled-point 0 0 0 60"
 #"0 0 0)) outline #(struct:pen \"black\" 2 solid round round)))) #(str"
 #"uct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 800 0 0 0) #(str"
 #"uct:pulled-point 0 0 800 600 0 0) #(struct:pulled-point 0 0 0 600 0 "
 #"0)) 255 \"white\")))))))))))))))))))))))))))))))))))))))))))))))))))"
 #"))))))))))))))))))))))) #(struct:bb 800 600 600.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 17 3 9 #";; Teste:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"DesenhaBolha"
0 0 24 3 2 #" ("
0 0 14 3 11 #"colideBolha"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 14 #"ListaDeBolhas1"
0 0 24 3 2 #") "
0 0 14 3 5 #"Sala1"
0 0 24 3 3 #") ("
0 0 14 3 20 #"DesenhaObjetosDaSala"
0 0 24 3 1 #" "
0 0 14 3 15 #"ListaDeObjetos1"
0 0 24 3 1 #" "
0 0 14 3 11 #"CenaDaSala1"
0 0 24 3 3 #")) "
0 6           4 21 7081
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:p"
 #"oint 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 294 605/2 #(struct:translate 5 5 #(struc"
 #"t:ellipse 10 10 0 outline \"blue\"))) #(struct:translate 0 0 #(struc"
 #"t:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800"
 #" 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 170 230 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 60 0 0"
 #" 0) #(struct:pulled-point 0 0 60 40 0 0) #(struct:pulled-point 0 0 0"
 #" 40 0 0)) outline \"red\"))) #(struct:translate 0 0 #(struct:crop (#"
 #"(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) #(s"
 #"truct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 335.0 237.00961894323342 #(struct:translate -0.0 25.98076"
 #"211353316 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0 15.00000000"
 #"0000007 -25.98076211353316 0 0)) 255 \"blue\"))) #(struct:translate "
 #"0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struc"
 #"t:point 800 600) #(struct:point 0 600)) #(struct:translate 0 -10 #(s"
 #"truct:overlay #(struct:translate 70 0 #(struct:translate 30 30 #(str"
 #"uct:ellipse 60 60 0 255 \"blue\"))) #(struct:translate 0 10 #(struct"
 #":crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 "
 #"600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 580 170 #(struct:translate 0 0 #(struct:polygon ("
 #"#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0 "
 #"0) #(struct:pulled-point 0 0 40 60 0 0) #(struct:pulled-point 0 0 0 "
 #"60 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:crop (#(st"
 #"ruct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) #(stru"
 #"ct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 440.0 380.33974596215563 #(struct:translate -0.0 17.32050807"
 #"5688775 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 10.0000000000"
 #"00004 -17.320508075688775 0 0)) 255 \"red\"))) #(struct:translate 0 "
 #"0 #(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:"
 #"point 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 1241/2 823/2 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 15 0 0 0) #(struct:pulled-point 0 0 15 15 0 0) #(struct:pull"
 #"ed-point 0 0 0 15 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(st"
 #"ruct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point "
 #"800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 10 5 #(struct:translate 0 0 #(struct:polygon "
 #"(#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 40 0 0"
 #" 0) #(struct:pulled-point 0 0 40 30 0 0) #(struct:pulled-point 0 0 0"
 #" 30 0 0)) 255 \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(st"
 #"ruct:point 0 0) #(struct:point 800 0) #(struct:point 800 600) #(stru"
 #"ct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 10.0 171.3397459621556 #(struct:translate -0.0 17.3205080756"
 #"88775 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:"
 #"pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 10.000000000000"
 #"004 -17.320508075688775 0 0)) outline \"black\"))) #(struct:translat"
 #"e 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(str"
 #"uct:point 800 600) #(struct:point 0 600)) #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 770 335 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 20 0 0 0) #(struct:pulled-point 0 0 20 30 0 0) #(struct:pulle"
 #"d-point 0 0 0 30 0 0)) 255 \"black\"))) #(struct:translate 0 0 #(str"
 #"uct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 8"
 #"00 600) #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 215 185 #(struct:translate 15 15 #(struct:elli"
 #"pse 30 30 0 outline \"orange\"))) #(struct:translate 0 0 #(struct:cr"
 #"op (#(struct:point 0 0) #(struct:point 800 0) #(struct:point 800 600"
 #") #(struct:point 0 600)) #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 110 25 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #"
 #"(struct:pulled-point 0 0 20 30 0 0) #(struct:pulled-point 0 0 0 30 0"
 #" 0)) 255 \"yellow\"))) #(struct:translate 0 0 #(struct:crop (#(struc"
 #"t:point 0 0) #(struct:point 800 0) #(struct:point 800 600) #(struct:"
 #"point 0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 520 320 #(struct:translate 40"
 #" 40 #(struct:ellipse 80 80 0 255 \"green\"))) #(struct:translate 0 0"
 #" #(struct:crop (#(struct:point 0 0) #(struct:point 800 0) #(struct:p"
 #"oint 800 600) #(struct:point 0 600)) #(struct:translate 0 -5.9807621"
 #"1353316 #(struct:overlay #(struct:translate 270.0 0 #(struct:transla"
 #"te -0.0 51.96152422706632 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 60 0 0 0) #(struct:pulled-point"
 #" 0 0 30.000000000000014 -51.96152422706632 0 0)) outline \"green\"))"
 #") #(struct:translate 0 5.98076211353316 #(struct:crop (#(struct:poin"
 #"t 0 0) #(struct:point 800 0) #(struct:point 800 600) #(struct:point "
 #"0 600)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 7"
 #"0 365 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-po"
 #"int 0 0 20 30 0 0) #(struct:pulled-point 0 0 0 30 0 0)) outline \"re"
 #"d\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(s"
 #"truct:point 800 0) #(struct:point 800 600) #(struct:point 0 600)) #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 200 400 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 "
 #"200 200 0 0) #(struct:pulled-point 0 0 0 200 0 0)) 255 \"blue\"))) #"
 #"(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:po"
 #"int 800 0) #(struct:point 800 600) #(struct:point 0 600)) #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 359 151 #(struct:tr"
 #"anslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(s"
 #"truct:pulled-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 100 "
 #"0 0) #(struct:pulled-point 0 0 0 100 0 0)) outline \"blue\"))) #(str"
 #"uct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point "
 #"800 0) #(struct:point 800 600) #(struct:point 0 600)) #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate "
 #"0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pu"
 #"lled-point 0 0 800 0 0 0) #(struct:pulled-point 0 0 800 600 0 0) #(s"
 #"truct:pulled-point 0 0 0 600 0 0)) outline #(struct:pen \"black\" 2 "
 #"solid round round)))) #(struct:translate 0 0 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 800 0 0 0) #(struct:pulled-point 0 0 800 600 0 0) #(struc"
 #"t:pulled-point 0 0 0 600 0 0)) 255 \"white\"))))))))))))))))))))))))"
 #")))))))))))))))))))))))))))))))))))))))))))))))))) #(struct:bb 800 6"
 #"00 600.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; colideBolha: Bolha Sala -> ListaDeBolhas"
0 0 24 29 1 #"\n"
0 0 17 3 185
(
 #";; Objetivo: Dada uma Bolha e uma Sala, testa todas as poss\303\255v"
 #"eis colis\303\265es entre a Bolha, os Objetos da Sala e os limites d"
 #"a Sala, fazendo as altera\303\247\303\265es nos vetores velocidade q"
 #"uando"
) 0 0 24 29 1 #"\n"
0 0 17 3 159
(
 #";; necess\303\241rio, retornando uma lista vazia quando a Bolha esto"
 #"ura, ou simplesmente devolvendo-a com a posi\303\247\303\243o atuali"
 #"zada caso n\303\243o tenha se chocado com nada."
) 0 0 24 29 1 #"\n"
0 0 17 3 50 #";; Exemplo: (colideBolha BolhaFora Sala1) -> empty"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";;          (colideBolha Bolha1 Sala1) -> (list (make-Bolha (make-po"
 #"s 401 "
) 0 8          10 17 6 #"615/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 17 3 14 #") (make-vel 1 "
0 8          10 17 5 #"15/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 17 3 8 #") 10 5))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; Testes:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"colideBolha"
0 0 24 3 1 #" "
0 0 14 3 9 #"BolhaFora"
0 0 24 3 1 #" "
0 0 14 3 5 #"Sala1"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"colideBolha"
0 0 24 3 1 #" "
0 0 14 3 6 #"Bolha1"
0 0 24 3 1 #" "
0 0 14 3 5 #"Sala1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-Bolha"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-pos"
0 0 24 3 1 #" "
0 0 21 3 3 #"299"
0 0 24 3 1 #" "
0 8          10 21 6 #"615/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-vel"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 8          10 21 5 #"15/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"colideBolha"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 11 #"ForaLimites"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 20 #"Sala-objetos_na_sala"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-Bolha"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-pos"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #"("
0 0 14 3 6 #"pos-px"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"vel-vx"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-vel"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 4 #")))("
0 0 14 3 1 #"+"
0 0 24 3 1 #"("
0 0 14 3 6 #"pos-py"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"vel-vy"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-vel"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 9 #"Bolha-vel"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 17 #"Bolha-resistencia"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 10 #"Bolha-raio"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"           [("
0 0 14 3 3 #"and"
0 0 24 3 1 #"("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 6 #"pos-px"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #"("
0 0 14 3 6 #"pos-px"
0 0 24 3 2 #" ("
0 0 14 3 14 #"Objeto-posicao"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 20 #"Sala-objetos_na_sala"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 6 #")))) ("
0 0 14 3 16 #"Objeto-distancia"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 20 #"Sala-objetos_na_sala"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 6 #")))) ("
0 0 14 3 10 #"Bolha-raio"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 5 #"))) ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 6 #"pos-px"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"+"
0 0 24 3 1 #"("
0 0 14 3 6 #"pos-px"
0 0 24 3 2 #" ("
0 0 14 3 14 #"Objeto-posicao"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 20 #"Sala-objetos_na_sala"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 6 #")))) ("
0 0 14 3 16 #"Objeto-distancia"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 20 #"Sala-objetos_na_sala"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 5 #"))) ("
0 0 14 3 10 #"Bolha-raio"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 6 #"pos-py"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 24 3 1 #"("
0 0 14 3 1 #"-"
0 0 24 3 1 #"("
0 0 14 3 6 #"pos-py"
0 0 24 3 2 #" ("
0 0 14 3 14 #"Objeto-posicao"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 20 #"Sala-objetos_na_sala"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 6 #")))) ("
0 0 14 3 16 #"Objeto-distancia"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 20 #"Sala-objetos_na_sala"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 6 #")))) ("
0 0 14 3 10 #"Bolha-raio"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 5 #"))) ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 6 #"pos-py"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"+"
0 0 24 3 1 #"("
0 0 14 3 6 #"pos-py"
0 0 24 3 2 #" ("
0 0 14 3 14 #"Objeto-posicao"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 20 #"Sala-objetos_na_sala"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 6 #")))) ("
0 0 14 3 16 #"Objeto-distancia"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 20 #"Sala-objetos_na_sala"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 5 #"))) ("
0 0 14 3 10 #"Bolha-raio"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  )"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 3 #"and"
0 0 24 3 1 #"("
0 0 14 3 1 #">"
0 0 24 3 1 #"("
0 0 14 3 17 #"Bolha-resistencia"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 12 #"Objeto-mole?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 20 #"Sala-objetos_na_sala"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 4 #"cond"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                   [("
0 0 14 3 1 #"<"
0 0 24 3 1 #"("
0 0 14 3 3 #"abs"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #"("
0 0 14 3 6 #"pos-px"
0 0 24 3 1 #"("
0 0 14 3 9 #"Bolha-pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"pos-px"
0 0 24 3 1 #"("
0 0 14 3 14 #"Objeto-posicao"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 20 #"Sala-objetos_na_sala"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 8 #")))))) ("
0 0 14 3 16 #"Objeto-distancia"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 20 #"Sala-objetos_na_sala"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-Bolha"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-pos"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #"("
0 0 14 3 6 #"pos-px"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"vel-vx"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-vel"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 4 #")))("
0 0 14 3 1 #"-"
0 0 24 3 1 #"("
0 0 14 3 6 #"pos-py"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"vel-vy"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-vel"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 6 #")))) ("
0 0 14 3 8 #"make-vel"
0 0 24 3 2 #" ("
0 0 14 3 6 #"vel-vx"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-vel"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"vel-vy"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-vel"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 6 #")))) ("
0 0 14 3 1 #"-"
0 0 24 3 1 #"("
0 0 14 3 17 #"Bolha-resistencia"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 1 #")"
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 10 #"Bolha-raio"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                   [("
0 0 14 3 1 #"<"
0 0 24 3 1 #"("
0 0 14 3 3 #"abs"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #"("
0 0 14 3 6 #"pos-py"
0 0 24 3 1 #"("
0 0 14 3 9 #"Bolha-pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"pos-py"
0 0 24 3 1 #"("
0 0 14 3 14 #"Objeto-posicao"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 20 #"Sala-objetos_na_sala"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 8 #")))))) ("
0 0 14 3 16 #"Objeto-distancia"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 20 #"Sala-objetos_na_sala"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-Bolha"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-pos"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #"("
0 0 14 3 6 #"pos-px"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"vel-vx"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-vel"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 4 #")))("
0 0 14 3 1 #"+"
0 0 24 3 1 #"("
0 0 14 3 6 #"pos-py"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"vel-vy"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-vel"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 6 #")))) ("
0 0 14 3 8 #"make-vel"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #"("
0 0 14 3 6 #"vel-vx"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-vel"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 5 #"))) ("
0 0 14 3 6 #"vel-vy"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-vel"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 5 #"))) ("
0 0 14 3 1 #"-"
0 0 24 3 1 #"("
0 0 14 3 17 #"Bolha-resistencia"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 1 #")"
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 10 #"Bolha-raio"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-Bolha"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-pos"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #"("
0 0 14 3 6 #"pos-px"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"vel-vx"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-vel"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 4 #")))("
0 0 14 3 1 #"-"
0 0 24 3 1 #"("
0 0 14 3 6 #"pos-py"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"vel-vy"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-vel"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 6 #")))) ("
0 0 14 3 8 #"make-vel"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"vel-vx"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-vel"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 5 #"))) ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 2 #" ("
0 0 14 3 6 #"vel-vy"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-vel"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 6 #")))) ("
0 0 14 3 1 #"-"
0 0 24 3 1 #"("
0 0 14 3 17 #"Bolha-resistencia"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 1 #")"
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 10 #"Bolha-raio"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                    ) ]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              )]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 11 #"colideBolha"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-Sala"
0 0 24 3 2 #" ("
0 0 14 3 16 #"Sala-comprimento"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 3 #") ("
0 0 14 3 11 #"Sala-altura"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 24 3 2 #" ("
0 0 14 3 20 #"Sala-objetos_na_sala"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"Sala-canhao"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             )"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           )"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; ForaLimites: Bolha Sala -> Booleano"
0 0 24 29 1 #"\n"
0 0 17 3 160
(
 #";; Objetivo: Testa se uma dada Bolha est\303\241 colidindo com uma d"
 #"as paredes da Sala inserida, retornando true caso tenha colidido ou "
 #"false caso n\303\243o tenha colidido"
) 0 0 24 29 1 #"\n"
0 0 17 3 50 #";; Exemplo: (ForaLimites BolhaFora Sala1) -> #true"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";;          (ForaLimites Bolha1 Sala1) -> #false"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"ForaLimites"
0 0 24 3 1 #" "
0 0 14 3 9 #"BolhaFora"
0 0 24 3 1 #" "
0 0 14 3 5 #"Sala1"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"ForaLimites"
0 0 24 3 1 #" "
0 0 14 3 6 #"Bolha1"
0 0 24 3 1 #" "
0 0 14 3 5 #"Sala1"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"ForaLimites"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #">="
0 0 24 3 1 #"("
0 0 14 3 6 #"pos-px"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 4 #")) ("
0 0 14 3 16 #"Sala-comprimento"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #">="
0 0 24 3 1 #"("
0 0 14 3 6 #"pos-py"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"Sala-altura"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #"<="
0 0 24 3 1 #"("
0 0 14 3 6 #"pos-px"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #"<="
0 0 24 3 1 #"("
0 0 14 3 6 #"pos-py"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"bolha"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; moveLoop: ListaDeBolhas Sala -> ListaDeCenas"
0 0 24 29 1 #"\n"
0 0 17 3 140
(
 #";; Objetivo: Cria uma ListaDeCenas para utiliza\303\247\303\243o pos"
 #"terior na fun\303\247\303\243o Movie,"
 #" a partir das intera\303\247\303\265es de uma ListaDeBolhas em uma S"
 #"ala"
) 0 0 24 29 1 #"\n"
0 0 17 3 43 #";; Exemplo: (moveLoop ListaDeBolhas1 Sala1)"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; (Teste \303\251 uma lista imensa de Cenas, imposs\303\255vel docu"
 #"mentar neste local)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"moveLoop"
0 0 24 3 1 #" "
0 0 14 3 3 #"ldb"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"ldb"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 20 #"DesenhaObjetosDaSala"
0 0 24 3 2 #" ("
0 0 14 3 20 #"Sala-objetos_na_sala"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 3 #") ("
0 0 14 3 10 #"CenaDaSala"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 12 #"DesenhaBolha"
0 0 24 3 1 #" "
0 0 14 3 3 #"ldb"
0 0 24 3 2 #" ("
0 0 14 3 20 #"DesenhaObjetosDaSala"
0 0 24 3 2 #" ("
0 0 14 3 20 #"Sala-objetos_na_sala"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 3 #") ("
0 0 14 3 10 #"CenaDaSala"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 5 #"))) ("
0 0 14 3 8 #"moveLoop"
0 0 24 3 2 #" ("
0 0 14 3 14 #"AlteraPosicoes"
0 0 24 3 1 #" "
0 0 14 3 3 #"ldb"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 2 #") "
0 0 14 3 4 #"sala"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; traduzListaBolhas: ListaDeBolhas Pos -> ListaDeBolhas"
0 0 24 29 1 #"\n"
0 0 17 3 158
(
 #";; Objetivo: Transforma as posi\303\247\303\265es de uma Lista de Bo"
 #"lhas para a posi\303\247\303\243o de um canh\303\243o, para que as f"
 #"un\303\247\303\265es seguintes se ada"
 #"ptem \303\240 posi\303\247\303\243o do mesmo,"
) 0 0 24 29 1 #"\n"
0 0 17 3 67
(
 #";; al\303\251m de garantir que nenhuma bolha possua velocidade total"
 #" nula"
) 0 0 24 29 1 #"\n"
0 0 17 3 133
(
 #";; Exemplo: (traduzListaBolhas (list (make-Bolha (make-pos 0 0 vel_b"
 #"olha1 10 5)))) -> (list (make-Bolha pos_canh\303\243o vel_bolha1 10 "
 #"5))"
) 0 0 24 29 1 #"\n"
0 0 17 3 58
#";;          (traduzListaBolhas empty pos_canh\303\243o) -> empty"
0 0 24 29 1 #"\n"
0 0 17 3 125
(
 #";;          (traduzListaBolhas (list BolhaParada) pos_canh\303\243o)"
 #" -> (list (make-Bolha (make-pos 300 300) (make-vel 1 1) 10 15))"
) 0 0 24 29 1 #"\n"
0 0 17 3 10 #";; Testes:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"traduzListaBolhas"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-Bolha"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-pos"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 10 #"vel_bolha1"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")) "
0 0 14 3 11 #"pos_canh\303\243o"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-Bolha"
0 0 24 3 1 #" "
0 0 14 3 11 #"pos_canh\303\243o"
0 0 24 3 1 #" "
0 0 14 3 10 #"vel_bolha1"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"traduzListaBolhas"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 11 #"pos_canh\303\243o"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"traduzListaBolhas"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 11 #"BolhaParada"
0 0 24 3 2 #") "
0 0 14 3 11 #"pos_canh\303\243o"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-Bolha"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-pos"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-vel"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"traduzListaBolhas"
0 0 24 3 1 #" "
0 0 14 3 3 #"ldb"
0 0 24 3 1 #" "
0 0 14 3 6 #"canhao"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"ldb"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"vel-vx"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-vel"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"ldb"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 6 #"vel-vy"
0 0 24 3 1 #"("
0 0 14 3 9 #"Bolha-vel"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"ldb"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"0"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-Bolha"
0 0 24 3 1 #" "
0 0 14 3 6 #"canhao"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-vel"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 17 #"Bolha-resistencia"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"ldb"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"Bolha-raio"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"ldb"
0 0 24 3 5 #"))) ("
0 0 14 3 17 #"traduzListaBolhas"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"ldb"
0 0 24 3 2 #") "
0 0 14 3 6 #"canhao"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-Bolha"
0 0 24 3 1 #" "
0 0 14 3 6 #"canhao"
0 0 24 3 2 #" ("
0 0 14 3 9 #"Bolha-vel"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"ldb"
0 0 24 3 4 #")) ("
0 0 14 3 17 #"Bolha-resistencia"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"ldb"
0 0 24 3 4 #")) ("
0 0 14 3 10 #"Bolha-raio"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"ldb"
0 0 24 3 5 #"))) ("
0 0 14 3 17 #"traduzListaBolhas"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"ldb"
0 0 24 3 2 #") "
0 0 14 3 6 #"canhao"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       )"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; Movie: ListaDeBolhas Sala -> ListaDeCenas"
0 0 24 29 1 #"\n"
0 0 17 3 188
(
 #";; Objetivo: Fun\303\247\303\243o que retorna para o usu\303\241rio "
 #"a cena geral das intera\303\247\303\265es das bolhas com o ambiente "
 #"a partir de uma ListaDeBolhas e de uma Sala que cont\303\251m a posi"
 #"\303\247\303\243o de um canh\303\243o,"
) 0 0 24 29 1 #"\n"
0 0 17 3 40 #";; que dita de onde as bolhas iniciar\303\243o"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; Exemplo: (Movie ListaDeBolhas1 Sala1)"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; (Teste \303\251 uma lista imensa de Cenas, imposs\303\255vel docu"
 #"mentar neste local)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"Movie"
0 0 24 3 1 #" "
0 0 14 3 3 #"ldb"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"run-movie"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.05"
0 0 24 3 2 #" ("
0 0 14 3 8 #"moveLoop"
0 0 24 3 2 #" ("
0 0 14 3 17 #"traduzListaBolhas"
0 0 24 3 1 #" "
0 0 14 3 3 #"ldb"
0 0 24 3 2 #" ("
0 0 14 3 11 #"Sala-canhao"
0 0 24 3 1 #" "
0 0 14 3 4 #"sala"
0 0 24 3 3 #")) "
0 0 14 3 4 #"sala"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 3 3 #"   "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0           0
